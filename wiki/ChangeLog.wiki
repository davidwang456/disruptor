#summary Log of changes between versions
#labels Changes

==Changes==

==2.0.0==
 * New API to reflect naming changes
   * Producer -> Publisher
   * Entry -> Event
   * Consumer -> !EventProcessor
   * !ConsumerBarrier -> !DependencyBarrier
 * !ProducerBarrier has been incorporated into the !RingBuffer for ease of use
 * !DisruptorWizard integrated for fluent API dependency graph construction
 * Rework of sequence tracking to avoid false sharing on Java 7, plus avoid mega-morphic calls to make better use of instruction cache
 * Reduced usage of memory barriers where possible
 * !WaitStrategy.YIELDING initially spins for a short period to reduce latency
 * Major performance improvement giving more than a 2X increase for throughput across most use cases.

==1.2.2==
 * !ProducerBarrier change to yield after busy spinning for a while.  This may help the situation when the the number of producers exceeds the number of cores.

==1.2.1==
 * Bug fix for setting the sequence in the !ForceFillProducerBarrier.
 * Code syntax tidy up.

==1.2.0==
 * Bug fix for regression introduced inlining multi-thread producer commit tracking code.  This was a critical bug for the multi-threaded producer scenario.
 * Added new !ProducerBarrier method for claiming a batch of sequences.  This feature can give a significant throughput increase.

===1.1.0===
 * Off by one regression bug in !ProducerBarrier introduced in 1.0.9.
 * Clarified the algorithm for initial cursor value in the !ClaimStrategy.

===1.0.9===
 * Added Apache 2.0 licence and comments.
 * Small performance improvements to producers barriers and !BatchConsumer.

===1.0.8===
 * Bugfix for !BatchConsumer sequence update when using !SequenceTrackingHandler to ensure sequence is always updated at the end of a batch regardless.

===1.0.7===
 * Factored out !LifecycleAware interface to allowing consumers handlers to be notified when their thread starts and shuts down.

===1.0.6===
 * Cache minimum consumer sequence in producer barriers.  This helps make the performance more predictable on Nehalem processors and greater on earlier Core 2 processors.

===1.0.5===
 * Removed Entry interface.  All Entries must now extend !AbstractEntry.
 * Made setSequence package private on !AbstractEntry for encapsulation.